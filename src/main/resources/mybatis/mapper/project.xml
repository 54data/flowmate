<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.sailing.flowmate.dao.ProjectDao">
	<select id="selectProjectNum" resultType="int">
		SELECT projects_seq.NEXTVAL
		FROM dual
	</select>
	
	<insert id="insertProject" parameterType="Project">
		INSERT INTO projects (
			project_id, member_id, project_name,
			project_start_date, project_due_date,
			project_content, project_regdate, project_state
		) VALUES (
			#{projectId}, #{memberId}, #{projectName},
			#{projectStartDate}, #{projectDueDate},
			#{projectContent}, TO_CHAR(SYSDATE, 'yyyymmddhh24miss'),
			CASE
				WHEN TO_CHAR(TO_DATE(#{projectStartDate}, 'YYYYMMDDHH24MISS'), 'YYYY-MM-DD') > SYSDATE THEN '예정'
				ELSE '진행 중'
    		END
		)
	</insert>
	
	<insert id="insertProjectMember" parameterType="ProjectMember">
		INSERT INTO project_member (
			project_id, member_id
		) VALUES (
			#{projectId}, #{memberId}
		)
	</insert>
	
	<select id="selectStepNum" resultType="int">
		SELECT project_step_seq.NEXTVAL
		FROM dual
	</select>
	
	<insert id="insertProjectStep" parameterType="ProjectStep">
		INSERT INTO project_step (
			step_id, project_id, step_name,
			step_start_date, step_due_date
		) VALUES (
			#{stepId}, #{projectId}, #{stepName},
			#{stepStartDate}, #{stepDueDate}
		)
	</insert>
	
	<select id="selectProject" parameterType="String" resultType="Project">
		SELECT 
			member_id, project_name, project_start_date, 
			project_due_date, project_end_date, project_content, 
			project_state
		FROM projects
		WHERE project_id = #{projectId}
		AND project_enabled = 1
	</select>
	
	<select id="selectProjectStepList" parameterType="String" resultType="ProjectStep">
		SELECT
			step_name, step_start_date, step_due_date
		FROM project_step
		WHERE project_id = #{projectId}
		AND step_enabled = 1
	</select>
	
	<select id="selectMyProjectList" parameterType="String" resultType="Project">
		SELECT
		    p.project_id, project_name, p.member_id, 
		    m.member_name, project_start_date, project_due_date, 
		    project_end_date, project_update_date, project_mcnt, 
		    project_regdate, COALESCE(project_progress, 0) AS project_progress, project_state 
		FROM projects p 
		JOIN project_member pm
		    ON p.project_id = pm.project_id
		JOIN members m
		    ON p.member_id = m.member_id
		LEFT JOIN (
		    SELECT COUNT(*) AS project_mcnt, project_id
		    FROM project_member
		    GROUP BY project_id
		) mcnt
		    ON p.project_id = mcnt.project_id
		LEFT JOIN (
		    SELECT project_id, ROUND(COUNT(CASE WHEN task_state = '완료' THEN 1 END) / NULLIF(COUNT(*), 0) * 100, 1) AS project_progress
		    FROM task
		    GROUP BY project_id
		) prog
		    ON p.project_id = prog.project_id
		WHERE project_enabled = 1
		AND pm.member_id = #{memberId}
		ORDER BY project_due_date, p.project_id
	</select>
	
	<select id="selectProjectTaskCnt" parameterType="String" resultType="Project">
		SELECT 
		    COUNT(CASE WHEN task_state = '완료' THEN 1 END) AS done_task_cnt, 
		    COUNT(*) AS total_task_cnt,
		    ROUND(COUNT(CASE WHEN task_state = '완료' THEN 1 END) / NULLIF(COUNT(*), 0) * 100, 1) AS project_progress
		FROM task
		WHERE project_id = #{projectId}
		GROUP BY project_id
		
		UNION ALL
		
		SELECT 
		    0 AS done_task_cnt, 
		    0 AS total_task_cnt,
		    0 AS project_progress
		FROM dual
		WHERE NOT EXISTS (
		    SELECT 1
		    FROM task
		    WHERE project_id = #{projectId}
		)
	</select>
</mapper>